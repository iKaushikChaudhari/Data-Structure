#include <stdio.h>
#include <stdlib.h>

struct Item
{
    char Name_m[30], Use[5][20], Ex_Date[5];
    float Price_m;
    int Quantity, Product_ID;
    struct Item *next;
} *Head_Item = NULL;

struct Bill
{
    int Data;
    char C_Name[30];
    float C_Price;
    int B_Quantity;
    struct Bill *Next;
} *Top = NULL;

void Add_Item();
void Display_DataBase(struct Item *);
void Remove_Item(struct Item *, int);
void Search_Item(struct Item *, int);
void Stock_Detail();
void Cart();
void Push();
void Display_Cart(struct Bill *);
void Bill();
// Main Function
int main()
{
    struct Item temp;
    char Name_M[20];
    int Product_ID, choice_main, switch_main;
    do
    {
        printf("<-----------MIT Medical Store---------->\n");
        printf("1)Add Medicine\t");
        printf("2)Display\t");
        printf("3)Remove Item\t");
        printf("4)Search Item\t");
        printf("5)Stock Detail\n");
        printf("6)Bill\n");
        printf("Press Option :");
        scanf("%d", &switch_main);
        switch (switch_main)
        {
        case 1:
            Add_Item();
            break;
        case 2:
            Display_DataBase(Head_Item);
            break;
        case 3:
            printf("Enter the Product ID :");
            scanf("%d", &Product_ID);
            Remove_Item(Head_Item, Product_ID);
            break;
        case 4:
            printf("Enter the Product ID :");
            scanf("%d", &Product_ID);
            Search_Item(Head_Item, Product_ID);
            break;
        case 5:
            Stock_Detail();
            break;
        case 6:
            Bill();
        default:
            break;
        }

        printf("\nDo you want to Quit Menu (Press 0):");
        scanf("%d", &choice_main);
    } while (choice_main == 0);
    // DisplayFun(Top);
    return 0;
}

void Add_Item()
{
    struct Item *last, *ptr;
    int choice_add;
    do
    {
        ptr = (struct Item *)malloc(sizeof(struct Item));
        printf("Product ID :");
        scanf("%d", &ptr->Product_ID);
        printf("Medicine Name :");
        scanf("%s", ptr->Name_m);
        printf("Price :");
        scanf("%f", &ptr->Price_m);
        printf("Quantity :");
        scanf("%d", &ptr->Quantity);
        printf("Use :");
        for (int i = 0; i < 5; i++)
        {
            scanf("%s", ptr->Use[i]);
        }

        ptr->next = NULL;
        if (Head_Item == NULL)
        {
            Head_Item = ptr;
        }
        else
        {
            last = Head_Item;
            while (last->next != NULL)
            {
                last = last->next;
            }
            last->next = ptr;
        }
        printf("\nIf you add one more Item (Press 0):");
        scanf("%d", &choice_add);
    } while (choice_add == 0);
}
void Display_DataBase(struct Item *p)
{
    int count = 1;
    printf("Sr.No\tName Of Medicine");
    while (p != NULL)
    {
        printf("Product ID :%d\n", p->Product_ID);
        printf("Name :%s\n", p->Name_m);
        printf("Price :%f\n", p->Price_m);
        printf("Quantity :%d\n", p->Quantity);
        // printf("Date :");
        // for (int i = 0; i < 5; i++)
        // {
        //     printf("%d", p->Date[i]);
        // }

        printf("Use :\n");
        for (int i = 0; i < 5; i++)
        {
            printf("%s\t", p->Use[i]);
        }

        p = p->next;
        count++;
    }
    printf("\n\nTotal Medicine :%d", count);
}
void Remove_Item(struct Item *p, int Product_id)
{
    struct Item *x;
    x = p;
    while (p != NULL)
    {
        if (Product_id == p->Product_ID)
        {
            x->next = p->next;
            p->next = NULL;
            free(p);
            break;
        }
        x = p;
        p = p->next;
    }
}
void Search_Item(struct Item *p, int key)
{
    int Flag = 0;
    while (p != NULL)
    {
        if (key == p->Product_ID)
        {
            printf("Name :%s\n", p->Name_m);
            printf("Price :%f\n", p->Price_m);
            printf("Quantity :%d\n", p->Quantity);
            printf("Use :\n");
            for (int i = 0; i < 5; i++)
            {
                printf("%s\t", p->Use[i]);
            }
            Flag = 1;
            break;
        }
        p = p->next;
    }
    if (Flag == 1)
    {
        printf("\nMedicine is Found.");
    }
    else
    {
        printf("\nMedicine is not Found in DataBase");
    }
}
void Stock_Detail()
{
    void Update_stock(struct Item *, int);
    void Less_Stock(struct Item *);
    printf("\n\n<-----------Stock Detail---------->\n\n");
    printf("1)Update Stock\n");
    printf("2)Add Items in Data Base\n");
    printf("3)Less Stock(Less than 20)\n");
    printf("4)Expired Medicine\n");
    int switch_stock_detail, choice_stock_detail, update_product_id;
    switch (switch_stock_detail)
    {
    case 1:
        printf("Enter the Product ID :");
        scanf("%d", &update_product_id);
        Update_stock(Head_Item, update_product_id);
        break;
    case 2:
        Add_Item();
        break;
    case 3:
        Less_Stock(Head_Item);
        break;
    default:
        break;
    }
}
void Update_stock(struct Item *ptr, int update_product_id)
{
    int Flag = 0;
    while (ptr != NULL)
    {
        if (update_product_id == ptr->Product_ID)
        {
            printf("Medicine Name :");
            scanf("%s", ptr->Name_m);
            printf("Price :");
            scanf("%f", &ptr->Price_m);
            printf("Quantity :");
            scanf("%d", &ptr->Quantity);
            printf("Use :");
            for (int i = 0; i < 5; i++)
            {
                scanf("%s", ptr->Use[i]);
            }
            Flag = 1;
            break;
        }
        ptr = ptr->next;
    }
    if (Flag == 1)
    {
        printf("\n!!Detail Updated!!");
    }
    else
    {
        printf("\nMedicine is not Found in DataBase");
    }
}
void Less_Stock(struct Item *ptr)
{
    while (ptr != NULL)
    {
        if (ptr->Quantity < 20)
        {
            printf("Name :%s\n", ptr->Name_m);
            printf("Price :%f\n", ptr->Price_m);
            printf("Quantity :%d\n", ptr->Quantity);
            printf("Use :\n");
            for (int i = 0; i < 5; i++)
            {
                printf("%s\t", ptr->Use[i]);
            }
            
        }
        ptr =  ptr->next;
    }
}
// void Expire_Item()
void Bill()
{
    //   void Push();
    //   void Display_Cart(struct Bill *);
    int Product_ID, choice_bill, choice_product,customer_quantity;
    do
    {
        printf("<----------Cart---------->\n");
        printf("1)Add To Bill\n2)Display Bill\nChoice :");
        scanf("%d", &choice_bill);
        switch (choice_bill)
        {
        case 1:
            printf("Enter the Product ID :");
            scanf("%d", &choice_product);
            printf("Enter the Quantity :");
            scanf("%d",&customer_quantity);
            Push(Head_Item, choice_product,customer_quantity);
            break;
        case 2:
            printf("<-----------MIT Medical Store---------->\n");
            Display_Cart(Top);
            break;
        default:
            printf("Please Choice the Correct Option");
            break;
        }
    } while (choice_bill == 0);
}
void Push(struct Item *Item_ptr, int choice_product, int Customer_quantity)
{
    struct Bill *temp;
    temp = Top;
    int n;

    int Flag = 0;
    while (Item_ptr != NULL)
    {
        if (choice_product == Item_ptr->Product_ID)
        {
            if (temp == NULL)
            {
                temp = (struct Bill *)malloc(sizeof(struct Bill));
                temp->C_Name[30] = Item_ptr->Name_m[30];
                temp->C_Price = Item_ptr->Price_m;
                temp->B_Quantity  = Customer_quantity;
                temp->Next = NULL;
                
                Top = temp;
            }
            else
            {
                temp = (struct Bill *)malloc(sizeof(struct Bill));
                temp->C_Name[30] = Item_ptr->Name_m[30];
                temp->C_Price = Item_ptr->Price_m;
                Item_ptr->Quantity  = Customer_quantity;
                temp->Next = Top;
                Top = temp;
            }
            break;
        }
        Item_ptr = Item_ptr->next;
    }
    if (Flag == 0)
    {
        printf("Data is not Found.");
    }
}
void Display_Cart(struct Bill *p)
{
    struct Bill *temp;
    float Productwise_total;
     float Total_Bill = 0;
    temp = p;
    if (p == NULL)
    {
        printf("No Empty Present Inside the ");
    }
    else
    {
        while (p != NULL)
        {
            printf("Name :%s\n", p->C_Name);
            printf("Price :%f\n", p->C_Price);
            printf("Quantity :%d\n", p->B_Quantity);
            Productwise_total = (p->B_Quantity)*(p->C_Price);
            printf("Product :%f\n",Productwise_total);
            Total_Bill += Productwise_total ;
            p = p->Next;
        }
        printf("\n<--------------------------->\n");
        printf("Total : %f",Total_Bill);
    }
}


